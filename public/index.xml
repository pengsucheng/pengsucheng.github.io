<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">

  <channel>
    <title>Random bits</title>
    <link>/</link>
    <description>Recent blog posts on Random bits</description>
    
    <generator>Hugo (https://gohugo.io)</generator>
    
    <language>en-us</language>
    
    <managingEditor></managingEditor>
    
    <webMaster></webMaster>
    
    <lastBuildDate>Fri, 08 Aug 2025 13:03:51 +0800</lastBuildDate>
    
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    

    <item>
      <title>A Practical Guide to Integrating Security into Your Jenkins Pipeline</title>
      <link>/posts/secure-pipelines/</link>
      <pubDate>Fri, 08 Aug 2025 13:03:51 +0800</pubDate>
      
      <author></author>

      
      
      
      

      <description>
      In modern software development, &amp;amp;ldquo;shifting left&amp;amp;rdquo; is more than just a buzzword; it&amp;amp;rsquo;s a crucial practice for building secure and reliable applications. By integrating security testing early and often in the development lifecycle, we can catch vulnerabilities before they reach production.
This guide will walk you through the practical steps of transforming a standard CI/CD pipeline into a robust DevSecOps pipeline. We&amp;amp;rsquo;ll start with a basic Jenkins setup for a Python application and incrementally add multiple layers of automated security scanning:
      </description>
      <guid isPermaLink="true">/posts/secure-pipelines/</guid>
    </item>
    
  </channel>
</rss>
